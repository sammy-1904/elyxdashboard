{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Centralized error logging\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const eventAPI = {\n  getConversations: () => api.get('/conversations'),\n  getDecisions: () => api.get('/decisions'),\n  getJourney: () => api.get('/journey'),\n  getMemberProfile: () => api.get('/member/profile'),\n  getMetrics: () => api.get('/metrics'),\n  getHealth: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","response","use","error","_error$response","console","data","message","Promise","reject","eventAPI","getConversations","get","getDecisions","getJourney","getMemberProfile","getMetrics","getHealth"],"sources":["C:/Users/Sameer Rawat/OneDrive/Desktop/MedicalConvo-AI/elyx-dashboard/frontend/src/services/api.js"],"sourcesContent":["// src/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\n// Centralized error logging\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', error?.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const eventAPI = {\r\n  getConversations: () => api.get('/conversations'),\r\n  getDecisions:     () => api.get('/decisions'),\r\n  getJourney:       () => api.get('/journey'),\r\n  getMemberProfile: () => api.get('/member/profile'),\r\n  getMetrics:       () => api.get('/metrics'),\r\n  getHealth:        () => api.get('/health'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,8BAA8B;AAEnD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACTC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEF,QAAQ,cAAAG,eAAA,uBAAfA,eAAA,CAAiBE,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;EACnE,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAG;EACtBC,gBAAgB,EAAEA,CAAA,KAAMf,GAAG,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EACjDC,YAAY,EAAMA,CAAA,KAAMjB,GAAG,CAACgB,GAAG,CAAC,YAAY,CAAC;EAC7CE,UAAU,EAAQA,CAAA,KAAMlB,GAAG,CAACgB,GAAG,CAAC,UAAU,CAAC;EAC3CG,gBAAgB,EAAEA,CAAA,KAAMnB,GAAG,CAACgB,GAAG,CAAC,iBAAiB,CAAC;EAClDI,UAAU,EAAQA,CAAA,KAAMpB,GAAG,CAACgB,GAAG,CAAC,UAAU,CAAC;EAC3CK,SAAS,EAASA,CAAA,KAAMrB,GAAG,CAACgB,GAAG,CAAC,SAAS;AAC3C,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}